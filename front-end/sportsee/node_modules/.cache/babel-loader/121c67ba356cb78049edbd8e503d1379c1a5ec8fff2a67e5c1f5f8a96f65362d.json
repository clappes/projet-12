{"ast":null,"code":"export const getUser = async id => {\n  try {\n    let response = null;\n    if (process.env.REACT_APP_MOCK === \"false\") {\n      console.log(\"test\");\n      response = await fetch(`http://localhost:3000/user/${id}`);\n    } else {\n      response = await fetch(`http://localhost:3001/user/${id}.json`);\n    }\n    const data = await response.json();\n    console.log(data);\n    return data.data || data;\n  } catch (error) {\n    return null;\n  }\n};\nexport const getActivity = async id => {\n  try {\n    let response = null;\n    if (process.env.REACT_APP_MOCK === \"false\") {\n      response = await fetch(`http://localhost:3000/user/${id}/activity`);\n    } else {\n      response = await fetch(`http://localhost:3001/activity/${id}.json`);\n    }\n    const data = await response.json();\n    return data.data || data;\n  } catch (error) {\n    return null;\n  }\n};\nexport const getPerformance = async id => {\n  try {\n    let response = null;\n    if (process.env.REACT_APP_MOCK === \"false\") {\n      response = await fetch(`http://localhost:3000/user/${id}/performance`);\n    } else {\n      response = await fetch(`http://localhost:3001/performance/${id}.json`);\n    }\n    const data = await response.json();\n    return data.data || data;\n  } catch (error) {\n    return null;\n  }\n};\nexport const getSessions = async id => {\n  try {\n    let response = null;\n    if (process.env.REACT_APP_MOCK === \"false\") {\n      response = await fetch(`http://localhost:3000/user/${id}/average-sessions`);\n    } else {\n      response = await fetch(`http://localhost:3001/average-sessions/${id}.json`);\n    }\n    const data = await response.json();\n    return data.data || data;\n  } catch (error) {\n    return null;\n  }\n};","map":{"version":3,"names":["getUser","id","response","process","env","REACT_APP_MOCK","console","log","fetch","data","json","error","getActivity","getPerformance","getSessions"],"sources":["C:/Users/Lucas/Documents/projet-12vf/front-end/sportsee/src/api/index.js"],"sourcesContent":["export const getUser = async (id) => {\r\n    try {\r\n        let response = null;\r\n        if(process.env.REACT_APP_MOCK === \"false\") {\r\n            console.log(\"test\");\r\n            response = await fetch(`http://localhost:3000/user/${id}`);\r\n        } else {\r\n            response = await fetch(`http://localhost:3001/user/${id}.json`);\r\n        }\r\n        const data = await response.json();\r\n        console.log(data);\r\n        return data.data || data\r\n    } catch(error) {\r\n        return null\r\n    }\r\n}\r\n\r\nexport const getActivity = async (id) => {\r\n    try {\r\n        let response = null;\r\n        if(process.env.REACT_APP_MOCK === \"false\") {\r\n            response = await fetch(`http://localhost:3000/user/${id}/activity`);\r\n        } else {\r\n            response = await fetch(`http://localhost:3001/activity/${id}.json`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n\r\n        return data.data || data\r\n    } catch(error) {\r\n        return null\r\n    }\r\n}\r\n\r\nexport const getPerformance = async (id) => {\r\n    try {\r\n        let response = null;\r\n        if(process.env.REACT_APP_MOCK === \"false\") {\r\n            response = await fetch(`http://localhost:3000/user/${id}/performance`);\r\n        } else {\r\n            response = await fetch(`http://localhost:3001/performance/${id}.json`);\r\n        }\r\n        const data = await response.json();\r\n        \r\n        return data.data || data\r\n    } catch(error) {\r\n        return null\r\n    }\r\n}\r\n\r\nexport const getSessions = async (id) => {\r\n    try {\r\n        let response = null;\r\n        if(process.env.REACT_APP_MOCK === \"false\") {\r\n            response = await fetch(`http://localhost:3000/user/${id}/average-sessions`);\r\n        } else {\r\n            response = await fetch(`http://localhost:3001/average-sessions/${id}.json`);\r\n        }\r\n        const data = await response.json();\r\n\r\n        return data.data || data\r\n    } catch(error) {\r\n        return null\r\n    }\r\n}"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,MAAOC,EAAE,IAAK;EACjC,IAAI;IACA,IAAIC,QAAQ,GAAG,IAAI;IACnB,IAAGC,OAAO,CAACC,GAAG,CAACC,cAAc,KAAK,OAAO,EAAE;MACvCC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnBL,QAAQ,GAAG,MAAMM,KAAK,CAAC,8BAA8BP,EAAE,EAAE,CAAC;IAC9D,CAAC,MAAM;MACHC,QAAQ,GAAG,MAAMM,KAAK,CAAC,8BAA8BP,EAAE,OAAO,CAAC;IACnE;IACA,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClCJ,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;IACjB,OAAOA,IAAI,CAACA,IAAI,IAAIA,IAAI;EAC5B,CAAC,CAAC,OAAME,KAAK,EAAE;IACX,OAAO,IAAI;EACf;AACJ,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAOX,EAAE,IAAK;EACrC,IAAI;IACA,IAAIC,QAAQ,GAAG,IAAI;IACnB,IAAGC,OAAO,CAACC,GAAG,CAACC,cAAc,KAAK,OAAO,EAAE;MACvCH,QAAQ,GAAG,MAAMM,KAAK,CAAC,8BAA8BP,EAAE,WAAW,CAAC;IACvE,CAAC,MAAM;MACHC,QAAQ,GAAG,MAAMM,KAAK,CAAC,kCAAkCP,EAAE,OAAO,CAAC;IACvE;IAEA,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAElC,OAAOD,IAAI,CAACA,IAAI,IAAIA,IAAI;EAC5B,CAAC,CAAC,OAAME,KAAK,EAAE;IACX,OAAO,IAAI;EACf;AACJ,CAAC;AAED,OAAO,MAAME,cAAc,GAAG,MAAOZ,EAAE,IAAK;EACxC,IAAI;IACA,IAAIC,QAAQ,GAAG,IAAI;IACnB,IAAGC,OAAO,CAACC,GAAG,CAACC,cAAc,KAAK,OAAO,EAAE;MACvCH,QAAQ,GAAG,MAAMM,KAAK,CAAC,8BAA8BP,EAAE,cAAc,CAAC;IAC1E,CAAC,MAAM;MACHC,QAAQ,GAAG,MAAMM,KAAK,CAAC,qCAAqCP,EAAE,OAAO,CAAC;IAC1E;IACA,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAElC,OAAOD,IAAI,CAACA,IAAI,IAAIA,IAAI;EAC5B,CAAC,CAAC,OAAME,KAAK,EAAE;IACX,OAAO,IAAI;EACf;AACJ,CAAC;AAED,OAAO,MAAMG,WAAW,GAAG,MAAOb,EAAE,IAAK;EACrC,IAAI;IACA,IAAIC,QAAQ,GAAG,IAAI;IACnB,IAAGC,OAAO,CAACC,GAAG,CAACC,cAAc,KAAK,OAAO,EAAE;MACvCH,QAAQ,GAAG,MAAMM,KAAK,CAAC,8BAA8BP,EAAE,mBAAmB,CAAC;IAC/E,CAAC,MAAM;MACHC,QAAQ,GAAG,MAAMM,KAAK,CAAC,0CAA0CP,EAAE,OAAO,CAAC;IAC/E;IACA,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAElC,OAAOD,IAAI,CAACA,IAAI,IAAIA,IAAI;EAC5B,CAAC,CAAC,OAAME,KAAK,EAAE;IACX,OAAO,IAAI;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}